select(-c(131:599)) %>% #remove fields relevant to parents responding about more than one young person
select(-c(135:147)) #remove embedded scores as well as other unneeded embedded fields
d11S <- d11S %>% mutate_at(vars(5:8,17:24,33,34,43:46,55:58,67:74,83:89,98:110,119:122), #re-code all sqi ratings from string to numerical
~as.numeric(recode(.,
"A lot"=3,
"Some"=2,
"Not at all"=1,
"Not applicable"=0,
"Not Applicable"=0
)))
colnames(d11S)[5:8] <- c(paste0("SQI",1:4)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d11S)[17:24] <- c(paste0("SQI",5:12)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d11S)[33:34] <- c(paste0("SQI",13:14)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d11S)[43:46] <- c(paste0("SQI",15:18)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d11S)[55:58] <- c(paste0("SQI",19:22)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d11S)[67:74] <- c(paste0("SQI",23:30)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d11S)[83:89] <- c(paste0("SQI",31:37)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d11S)[98:110] <- c(paste0("SQI",38:50)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d11S)[119:122] <- c(paste0("SQI",51:54)) #add SQI to all items measuring a sub-indicator and add the number of the item.
d11S <- d11S %>% mutate_at(vars(9:11,25:27,35:37,47:49,59:61,75:77,90:92,111:113,123:125), #re-code all ADAPT ratings from string to numerical
~as.numeric(recode(.,
"Limited Adaptation (2)"=2,
"Full Adaptation (4)"=4,
"No Adaptation (1)"=1,
"Partial Adaptation (3)"=3,
"Not Applicable"=0,
"Not applicable"=0
)))
d11S <- d11S %>% mutate_at(vars(12:14,28:30,38:40,50:52,62:64,78:80,93:95,114:116,126:128), #re-code all ACCESS ratings from string to numerical
~as.numeric(recode(.,
"Limited Access (2)"=2,
"Full Access (4)"=4,
"No Access (1)"=1,
"Partial Access (3)"=3,
"Not Applicable"=0,
"Not applicable"=0
)))
d11S <- d11S %>% select(-c(15,16,31,32,41,42,53,54,65,66,81,82,96,97,117,118,129,130)) #remove resource level and effectiveness ratings. They are not used in the model
#CHUNK 6
#union youth, family and stakeholder tables
d11join <- full_join(d11Y,d11F) #youth and families
d11final <- full_join(d11join,d11S) #join with stakeholders
rm(d11join,d11,d11F,d11S,d11Y)
rm(d1Fm)
rm(d8Y)
d8 <- read_excel("PA_Virtual_Charter.xlsx")
#CHUNK 7
#Rename role, age, gender, school, race
d8 <- d8 %>% rename(Role = Q1) %>%
rename(Age = Q2) %>% rename(Gender = Q3) %>%
rename(School = Q5) %>% rename(Race_Eth = Q4)
#remove first row acting as question name which was added by Qualtrics out-dated export functionality.
d8 <- d8[-c(1),]
#CHUNK 8
#Cleaning Youth Responses
d8Y <- d8 %>% filter(Role =="I'm a Young Person") %>% #filter out just youth responses
filter(Finished=="True") %>% #only complete responses
select(-c(75:696)) %>% #remove all fields from the family and stakeholder survey questions
select(-c(75:83)) %>% #remove embedded scores
select(-c(78:85)) %>% #remove fields relevant to families with more than one young person with a disability pt1
select(-c(79:80)) %>% #remove fields relevant to families with more than one young person with a disability pt2
select(-c(15:18)) %>% #remove youth extra demographic responses
select(-c(1:10)) %>% #remove embedded demographic data
select(-c(59:60)) %>% # remove youth written responses
mutate(Q773 = Q773 %>% str_replace_all(c("Some\r\n" = "Some",
"A lot\r\n" = "A lot",
"Not at all\r\n" = "Not at all",
"Some" = "Some",
"A lot" = "A lot",
"Not at all" = "Not at all")))
d8Y <- d8Y %>% mutate_at(vars(5:58), #re-code all ratings from string to numerical
~as.numeric(recode(.,
"A lot"=3,
"Some"=2,
"Not at all"=1,
"Don't Know / Doesn't Relate to Me" = 0,
)))
colnames(d8Y)[5:58] <- c(paste0("SQI",1:54)) #add SQI to all items measuring a sub-indicator and add the number of the item.
#CHUNK 9
#Cleaning Parent Responses - one young person
d8F <- d8 %>% filter(Role =="I'm a Parent / Legal Guardian") %>%
filter(Finished=="True") %>% #only complete responses
select(-c(1:74)) %>% #remove youth response fields
select(-c(1:149)) %>% #remove stakeholder response fields
select(-c(5:8)) %>% #remove write-in demographics and unneeded demographics
select(-c(9:11,20:22,25:27,32:34,39:41,50:52,60:62,76:78,83:87)) %>% #remove effectiveness ratings and written responses from parents.
select(-c(59:418)) %>% #remove fields for parents responding about more than one young person
select(-c(59:89)) %>% #remove unneeded embedded data pt 1
select(-c(62:69)) %>% #remove unneeded embedded data pt 2
select(-c(63)) %>% #remove unneeded embedded data pt 3
filter(Q166 == "I want to share about one young person")
d8F <- d8F %>% mutate_at(vars(5:58), #re-code all ratings from string to numerical
~as.numeric(recode(.,
"A lot"=3,
"Some"=2,
"Not at all"=1,
"Not applicable" = 0,
)))
colnames(d8F)[5:58] <- c(paste0("SQI",1:54)) #add SQI to all items measuring a sub-indicator and add the number of the item.
d8F$Role <- as.character("I'm a Parent / Legal Guardian")
#CHUNK 10
#Cleaning Parent Responses - multiple young people
d8Fm <- d8 %>% filter(Role =="I'm a Parent / Legal Guardian") %>%
filter(Finished=="True") %>% #only complete responses
select(-c(1:76)) %>% #remove youth response fields
select(-c(1:149)) %>% #remove stakeholder response fields
select(-c(6:10)) %>% #remove write-in demographics and unneeded demographics from single youth parents
select(-c(10:12,21:23,26:28,33:35,40:42,51:53,61:63,77:79,84:88)) %>% #remove effectiveness ratings and written responses from parents.
select(-c(131:599)) %>% #remove fields relevant to parents responding about more than one young person
select(-c(135:147)) #remove embedded scores as well as other unneeded embedded fields
#CHUNK 11
#Cleaning Stakeholder Responses
d8S <- d8 %>% filter(Role == "I'm a Transition Stakeholder") %>%
filter(Finished=="True") %>% #only complete response
select(-c(1:10)) %>% #remove embedded demographic data fields from Qualtrics
select(-c(2:64)) %>% #remove youth fields
select(-c(3,4,5,6)) %>% #remove write-in fields and unneeded demo fields for stakeholders
select(-c(15,16,33,34,45,46,59,60,73,74,91,92,108,109,131,132,145:148)) %>% #remove stakeholder written responses
select(-c(129:577)) %>% #remove fields relevant to parents responding about more than one young person
select(-c(129:159)) %>% #remove embedded scores as well as other unneeded embedded fields pt 1
select(-c(132:139)) %>% #remove embedded scores as well as other unneeded embedded fields pt 2
select(-c(133)) #remove embedded scores as well as other unneeded embedded fields pt 3
d8S <- d8S %>% mutate_at(vars(3:6,15:22,31,32,41:44,53:56,65:72,81:87,96:108,117:120), #re-code all sqi ratings from string to numerical
~as.numeric(recode(.,
"A lot"=3,
"Some"=2,
"Not at all"=1,
"Not applicable"=0
)))
colnames(d8S)[3:6] <- c(paste0("SQI",1:4)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d8S)[15:22] <- c(paste0("SQI",5:12)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d8S)[31:32] <- c(paste0("SQI",13:14)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d8S)[41:44] <- c(paste0("SQI",15:18)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d8S)[53:56] <- c(paste0("SQI",19:22)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d8S)[65:72] <- c(paste0("SQI",23:30)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d8S)[81:87] <- c(paste0("SQI",31:37)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d8S)[96:108] <- c(paste0("SQI",38:50)) #add SQI to all items measuring a sub-indicator and add the number of the item.
colnames(d8S)[117:120] <- c(paste0("SQI",51:54)) #add SQI to all items measuring a sub-indicator and add the number of the item.
d8S <- d8S %>% mutate_at(vars(7:9,23:25,33:35,45:47,57:59,73:75,88:90,109:111,121:123,), #re-code all ADAPT ratings from string to numerical
~as.numeric(recode(.,
"Limited Adaptation (2)"=2,
"Full Adaptation (4)"=4,
"No Adaptation (1)"=1,
"Partial Adaptation (3)"=3,
"Not Applicable"=0
)))
d8S <- d8S %>% mutate_at(vars(10:12,26:28,36:38,48:50,60:62,76:78,91:93,112:114,124:126), #re-code all ACCESS ratings from string to numerical
~as.numeric(recode(.,
"Limited Access (2)"=2,
"Full Access (4)"=4,
"No Access (1)"=1,
"Partial Access (3)"=3,
"Not Applicable"=0
)))
d8S <- d8S %>% select(-c(13,14,29,30,39,40,51,52,63,64,79,80,94,95,115,116,127,128)) #remove resource level and effectiveness ratings. They are not used in the model
d8S <- d8S %>% select(-c(115)) #remove Q168, duplicate field of LEA name
#CHUNK 12
#union youth, family and stakeholder tables
d8join <- full_join(d8Y,d8F) #youth and families
d8final <- full_join(d8join,d8S) #join with stakeholders
rm(d8join,d8,d8F,d8S,d8Y)
#Join data from all sites
FlanaganFinalData <- full_join(d1final,d2final)
FlanaganFinalData <- full_join(FlanaganFinalData,d3final)
FlanaganFinalData <- full_join(FlanaganFinalData,d4final)
FlanaganFinalData <- full_join(FlanaganFinalData,d5final)
FlanaganFinalData <- full_join(FlanaganFinalData,d6final)
FlanaganFinalData <- full_join(FlanaganFinalData,d7final)
FlanaganFinalData <- full_join(FlanaganFinalData,d8final)
FlanaganFinalData <- full_join(FlanaganFinalData,d9final)
FlanaganFinalData <- full_join(FlanaganFinalData,d10final)
FlanaganFinalData <- full_join(FlanaganFinalData,d11final)
as_tibble(FlanaganFinalData)
write.csv(FlanaganFinalData, file = "FlanaganFinalData.csv")
#descriptive statistics on sample
library(psych)
describe(FlanaganFinalData)
View(FlanaganFinalData)
summarystats <- describe(FlanaganFinalData)
summarystats <- as.tibble(describe(FlanaganFinalData))
summarystats <- as_tibble(describe(FlanaganFinalData))
View(summarystats)
View(FlanaganFinalData)
summarystats <- select(filter(describe(FlanaganFinalData)),c(1,2,3,4,5))
View(summarystats)
View(summarystats)
summarystats <- select((describe(FlanaganFinalData)),c(1,2,3,4,5))
View(summarystats)
rm(summarystats)
summarystats <- describe(select(FlanaganFinalData,c(1,2,3,4,5)))
View(summarystats)
library(ggplot2)
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar()
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
geom_text(aes(lable=Role),vjust=.03,size=3.5)
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
geom_text(aes(label=Role),vjust=.03,size=3.5)
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
geom_text(aes(label=Role),vjust=.03,size=3.5)
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
geom_text(aes(label=Role),vjust=-.03,size=3.5)
ggplot() +
geom_bar(data=FlanaganFinalData,aes(x=Role)) +
geom_text(aes(label=Role),vjust=-.03,size=3.5)
ggplot() +
geom_bar(data=FlanaganFinalData,aes(x=Role)) +
geom_text(aes(label=FlanaganFinlaData$Role),vjust=-.03,size=3.5)
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar(stat = "identity") +
geom_text(aes(label=Role),vjust=-.03,size=3.5)
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar(stat = "identity")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar()
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=0.5),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=0.3),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=0.8),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=-.8),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=.5),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=0.5),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=0.7),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=1.6),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=2),
colour="White")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
colour="red")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
colour="yellow")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(vjust=0.5), colour="white")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
position=position_fill(), colour="white")
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)) +
theme(text = element_text(debug=TRUE))
ggplot(data=FlanaganFinalData,aes(x=Role)) +
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)) +
theme_light())
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)),
colour="white"))
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count),
colour="white"))
ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)))
Role <- ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)))
Age <- ggplot(data=FlanaganFinalData,aes(x=Role)) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
Age <- ggplot(data=FlanaganFinalData,aes(x=Age)) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
Age <- ggplot(data=FlanaganFinalData,aes(x=!is.na(Age))) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
Age <- ggplot(data=FlanaganFinalData,aes(x=(filter(Age,!is.na(Age))))) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
Age <- ggplot(data=FlanaganFinalData,aes(x=(filter(FlanaganFinalData,!is.na(Age))))) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
pinrt(Age)
print(Age)
Age <- ggplot(data=FlanaganFinalData,aes(x=Age)) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
print(age)
print(Age)
Age <- filter(FlanaganFinalData,!is.na(Age)) %>%
ggplot(data=FlanaganFinalData,aes(x=Age)) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
Age <- filter(FlanaganFinalData,!is.na(Age))
ggplot(data=FlanaganFinalData,aes(x=Age)) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
Age <- ggplot(data=subset(FlanaganFinalData!is.na(Age),aes(x=Age))) +
Age <- ggplot(data=subset(FlanaganFinalData,!is.na(Age),aes(x=Age))) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
Age <- ggplot(data=subset(FlanaganFinalData,!is.na(Age)),aes(x=Age)) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
rm(Age)
Age <- ggplot(data=subset(FlanaganFinalData,!is.na(Age)),aes(x=Age)) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
Median(Age)
median(Age)
median(FlanaganFinalData$Age)
FlanaganFinalData$Age <- as.numeric(FlanaganFinalData$Age)
median(FlanaganFinalData$Age)
summarystats <- describe(select(FlanaganFinalData,c(1,2,3,4,5)))
Age <- ggplot(data=subset(FlanaganFinalData,!is.na(Age)),aes(x=Age)) +
geom_bar() +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
Age <- hist(FlanaganFinalData$Age)
print(Age)
View(Age)
Age <- ggplot(data=subset(FlanaganFinalData,!is.na(Age)),aes(x=Age)) +
geom_histogram() +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
Age <- ggplot(data=subset(FlanaganFinalData,!is.na(Age)),aes(x=Age)) +
geom_histogram(binwidth = 1) +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
ggplot(data=subset(FlanaganFinalData,!is.na(Age)),aes(x=Age)) +
geom_histogram(binwidth = 1,color="black",fill="white") +
stat_count(geom="text",
aes(label=stat(count)))
Age <- ggplot(data=subset(FlanaganFinalData,!is.na(Age)),aes(x=Age)) +
geom_histogram(binwidth = 1,color="black",fill="white") +
stat_count(geom="text",
aes(label=stat(count)))
print(Age)
summarystats <- describe(select(FlanaganFinalData,-c(1,2,3,4,5)))
rm(summarystats)
itemstatistics <- describe(select(FlanaganFinalData,-c(1,2,3,4,5)))
Gender <- ggplot(data=FlanaganFinalData,aes(x=Gender)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)))
print(Gender)
Gender <- ggplot(data=subset(FlanaganFinalData,!is.na(Gender)),aes(x=Gender)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)))
print(Gender)
FlanaganFinalData <- rename(FlanaganFinalData,Q65 = ProfessionalRole)
FlanaganFinalData <- rename(FlanaganFinalData,ProfessionalRole = Q65)
itemstatistics <- describe(select(FlanaganFinalData,c(6:59)))
View(itemstatistics)
ProfRole <- ggplot(data=subset(FlanaganFinalData,!is.na(ProfessionalRole)),aes(x=ProfessionalRole)) +
geom_bar() +
stat_count(geom="text",
aes(label = stat(count)))
print(ProfRole)
ProfRole <- as.data.frame(count(FlanaganFinalData,"ProfessionalRole"))
print(ProfRole)
FlanaganFinalData <- as.factor(FlanaganFinalData$ProfessionalRole)
ProfRole <- as.data.frame(count(FlanaganFinalData,"ProfessionalRole"))
FlanaganFinalData <- as.character(FlanaganFinalData$ProfessionalRole)
FlanaganFinalData <- as.character(FlanaganFinalData$ProfessionalRole)
#Join data from all sites
FlanaganFinalData <- full_join(d1final,d2final)
FlanaganFinalData <- full_join(FlanaganFinalData,d3final)
FlanaganFinalData <- full_join(FlanaganFinalData,d4final)
FlanaganFinalData <- full_join(FlanaganFinalData,d5final)
FlanaganFinalData <- full_join(FlanaganFinalData,d6final)
FlanaganFinalData <- full_join(FlanaganFinalData,d7final)
FlanaganFinalData <- full_join(FlanaganFinalData,d8final)
FlanaganFinalData <- full_join(FlanaganFinalData,d9final)
FlanaganFinalData <- full_join(FlanaganFinalData,d10final)
FlanaganFinalData <- full_join(FlanaganFinalData,d11final)
FlanaganFinalData$Age <- as.numeric(FlanaganFinalData$Age)
FlanaganFinalData <- rename(FlanaganFinalData,ProfessionalRole = Q65)
as_tibble(FlanaganFinalData)
write.csv(FlanaganFinalData, file = "FlanaganFinalData.csv")
install.packages("corrplot")
install.packages("polycor")
library(cortplot)
library(corplot)
library(corrplot)
library(polycor)
#Correlation matrix to find which items are most strongly related after removing youth dev SQIs
SQIitemcorrelations <- polychor(select(FlanaganFinalData,c(6:59)),
ML = TRUE,
maxcor = .9999)
itemsonly <- select(FlanaganFinalData,c(6:59))
SQIitemcorrelations <- polychor(itemsonly,
ML = TRUE,
maxcor = .9999)
SQIitemcorrelations <- polychor(itemsonly,
ML = FALSE,
maxcor = .9999)
#Correlation matrix to find which items are most strongly related after removing youth dev SQIs
SQIitemcorrelations <- polychor(itemsonly,ML = FALSE)
#Correlation matrix to find which items are most strongly related after removing youth dev SQIs
SQIitemcorrelations <- polychor(itemsonly,ML = FALSE,std.err = TRUE)
#Correlation matrix to find which items are most strongly related after removing youth dev SQIs
SQIitemcorrelations <- polychor(itemsonly$SQI1,SQIitemcorrelations$SQI2,ML = FALSE,std.err = TRUE)
#Correlation matrix to find which items are most strongly related after removing youth dev SQIs
SQIitemcorrelations <- polychor(itemsonly$SQI1,itemsonly$SQI2,ML = FALSE,std.err = TRUE)
SQIitemcorrelations <- polychoric(itemsonly,smooth=TRUE,global=TRUE,polycor=TRUE, ML = FALSE,
std.err=FALSE,weight=NULL,progress=TRUE,na.rm=TRUE, delete=TRUE)
SQIitemcorrelations <- polychoric(itemsonly,smooth=TRUE,global=TRUE, ML = FALSE,
std.err=FALSE,weight=NULL,progress=TRUE,na.rm=TRUE, delete=TRUE)
print(SQIitemcorrelations)
corPlot(SQIitemcorrelations)
corrplot(SQIitemcorrelations)
corrplot(SQIitemcorrelations,method = "number")
corrplot(SQIitemcorrelations$rho,method = "number")
polyplot <- corrplot(SQIitemcorrelations$rho,method = "number")
print(polyplot)
print(corrplot(SQIitemcorrelations$rho,method = "number"))
View(polyplot)
ployplot$corr
polyplot <- corrplot(SQIitemcorrelations$rho,method = "number")
polyplot$corr
polyplot <- corrplot(SQIitemcorrelations$rho,method = "number")
polyplot <- corrplot(SQIitemcorrelations$rho,
method = "number",
type = "lower")
view(polyplot)
